============================= test session starts =============================
platform win32 -- Python 3.7.6, pytest-4.6.2, py-1.8.0, pluggy-0.12.0 -- C:\Users\Armstrong\codenation\venv\Scripts\python.exe
cachedir: .pytest_cache
rootdir: C:\Users\Armstrong\codenation\data-science-4
collecting ... collected 7 items

test_submit.py::test_q1 PASSED                                           [ 14%]
test_submit.py::test_q2 PASSED                                           [ 28%]
test_submit.py::test_q3 PASSED                                           [ 42%]
test_submit.py::test_q4 PASSED                                           [ 57%]
test_submit.py::test_q5 PASSED                                           [ 71%]
test_submit.py::test_q6 PASSED                                           [ 85%]
test_submit.py::test_q7 PASSED                                           [100%]

============================== warnings summary ===============================
test_submit.py::test_q3
  C:\Users\Armstrong\codenation\venv\lib\site-packages\pandas\core\generic.py:6130: SettingWithCopyWarning: 
  A value is trying to be set on a copy of a slice from a DataFrame
  
  See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
    self._update_inplace(new_data)

test_submit.py::test_q3
  C:\Users\Armstrong\codenation\data-science-4\main.py:203: SettingWithCopyWarning: 
  A value is trying to be set on a copy of a slice from a DataFrame.
  Try using .loc[row_indexer,col_indexer] = value instead
  
  See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
    data["Region"] = le.fit_transform(data["Region"])

-- Docs: https://docs.pytest.org/en/latest/warnings.html
- generated xml file: C:\Users\Armstrong\codenation\data-science-4\output.xml -
==================== 7 passed, 2 warnings in 7.27 seconds =====================
